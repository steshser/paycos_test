version: 2.1
jobs:
  build:
    docker:
      - image: cimg/python:3.11

    working_directory: ~/Users/steshser/PycharmProjects/paycos_test

    steps:
      - checkout

      - run:
          name: Install Chrome and Firefox
          command: |
            curl -sS -o - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
            sudo apt-get update
            sudo apt-get -y install google-chrome-stable

            sudo apt-get -y install firefox

      - run:
          name: Install Chrome WebDriver
          command: |
            CHROMEDRIVER_VERSION="118.0.5993.70"
            curl -o /tmp/chromedriver-linux64.zip https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/118.0.5993.70/linux64/chromedriver-linux64.zip
            unzip /tmp/chromedriver-linux64.zip -d /tmp
            sudo mv /tmp/chromedriver-linux64/chromedriver /usr/local/bin/chromedriver
            sudo chmod +x /usr/local/bin/chromedriver
            echo "export PATH=\$PATH:/usr/local/bin/chromedriver" >> $BASH_ENV
            source $BASH_ENV
            chromedriver --version

      - run:
          name: Install Firefox WebDriver
          command: |
           GECKODRIVER_VERSION="0.33.0"
            wget https://github.com/mozilla/geckodriver/releases/download/v$GECKODRIVER_VERSION/geckodriver-v$GECKODRIVER_VERSION-linux64.tar.gz -O /tmp/geckodriver.tar.gz
            tar -xzf /tmp/geckodriver.tar.gz -C /tmp
            sudo mv /tmp/geckodriver /usr/local/bin/geckodriver
            sudo chmod +x /usr/local/bin/geckodriver
            echo "export PATH=\$PATH:/usr/local/bin/geckodriver" >> $BASH_ENV
            source $BASH_ENV
            geckodriver --version

      - run:
          name: Install Dependencies
          command: |
            pip install -r requirements.txt

      - run:
          name: Run API Test
          command: |
            pytest -m api

      - run:
          name: Run UI Test
          command: |
            pytest -m ui

      - store_artifacts:
          path: test-reports
          destination: /test-reports

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - main
